package keyboard

import (
	"telegram-tax-bot/internal/model"

	tgbotapi "github.com/go-telegram-bot-api/telegram-bot-api/v5"
)

func BuildBackToMenu() tgbotapi.ReplyKeyboardMarkup {
	markup := tgbotapi.NewReplyKeyboard(
		tgbotapi.NewKeyboardButtonRow(
			tgbotapi.NewKeyboardButton("üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é"),
		),
	)
	markup.ResizeKeyboard = true
	return markup
}

func BuildMainMenu(s *model.Session) tgbotapi.ReplyKeyboardMarkup {
	var rows [][]tgbotapi.KeyboardButton

	if s.IsEmpty() {
		rows = [][]tgbotapi.KeyboardButton{
			tgbotapi.NewKeyboardButtonRow(tgbotapi.NewKeyboardButton("üìé –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª")),
			tgbotapi.NewKeyboardButtonRow(tgbotapi.NewKeyboardButton("‚ÑπÔ∏è –ü–æ–º–æ—â—å")),
		}
	} else {
		rows = [][]tgbotapi.KeyboardButton{
			tgbotapi.NewKeyboardButtonRow(tgbotapi.NewKeyboardButton("üìã –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ")),
			tgbotapi.NewKeyboardButtonRow(tgbotapi.NewKeyboardButton("üìä –û—Ç—á—ë—Ç")),
			tgbotapi.NewKeyboardButtonRow(tgbotapi.NewKeyboardButton("üìÖ –û—Ç—á—ë—Ç –Ω–∞ –∑–∞–¥–∞–Ω–Ω—É—é –¥–∞—Ç—É")),
			tgbotapi.NewKeyboardButtonRow(tgbotapi.NewKeyboardButton("üìé –ó–∞–≥—Ä—É–∑–∏—Ç—å –Ω–æ–≤—ã–π —Ñ–∞–π–ª")),
			tgbotapi.NewKeyboardButtonRow(tgbotapi.NewKeyboardButton("üóë –°–±—Ä–æ—Å–∏—Ç—å")),
			tgbotapi.NewKeyboardButtonRow(tgbotapi.NewKeyboardButton("‚ÑπÔ∏è –ü–æ–º–æ—â—å")),
		}
	}

	markup := tgbotapi.NewReplyKeyboard(rows...)
	markup.ResizeKeyboard = true
	return markup
}

// BuildPeriodsMenu returns keyboard for period list actions.
func BuildPeriodsMenu() tgbotapi.ReplyKeyboardMarkup {
	markup := tgbotapi.NewReplyKeyboard(
		tgbotapi.NewKeyboardButtonRow(tgbotapi.NewKeyboardButton("‚úèÔ∏è –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–µ—Ä–∏–æ–¥")),
		tgbotapi.NewKeyboardButtonRow(tgbotapi.NewKeyboardButton("‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø–µ—Ä–∏–æ–¥")),
		tgbotapi.NewKeyboardButtonRow(tgbotapi.NewKeyboardButton("üóë –£–¥–∞–ª–∏—Ç—å –ø–µ—Ä–∏–æ–¥")),
		tgbotapi.NewKeyboardButtonRow(tgbotapi.NewKeyboardButton("üìä –û—Ç—á—ë—Ç")),
		tgbotapi.NewKeyboardButtonRow(tgbotapi.NewKeyboardButton("üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é")),
	)
	markup.ResizeKeyboard = true
	return markup
}

// BuildAddPeriodMenu returns keyboard for choosing type of period to add.
func BuildAddPeriodMenu() tgbotapi.ReplyKeyboardMarkup {
	markup := tgbotapi.NewReplyKeyboard(
		tgbotapi.NewKeyboardButtonRow(tgbotapi.NewKeyboardButton("üóì –•–≤–æ—Å—Ç–æ–≤–æ–π (—Ç–æ–ª—å–∫–æ –≤—ã–µ–∑–¥)")),
		tgbotapi.NewKeyboardButtonRow(tgbotapi.NewKeyboardButton("‚èÆ –ù–∞—á–∞–ª—å–Ω—ã–π (—Ç–æ–ª—å–∫–æ –≤—ä–µ–∑–¥)")),
		tgbotapi.NewKeyboardButtonRow(tgbotapi.NewKeyboardButton("üìÑ –ü–æ–ª–Ω—ã–π (–≤—ä–µ–∑–¥+–≤—ã–µ–∑–¥)")),
		tgbotapi.NewKeyboardButtonRow(tgbotapi.NewKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å")),
	)
	markup.ResizeKeyboard = true
	return markup
}

// BuildEditFieldMenu returns keyboard with editable fields of a period.
func BuildEditFieldMenu() tgbotapi.ReplyKeyboardMarkup {
	markup := tgbotapi.NewReplyKeyboard(
		tgbotapi.NewKeyboardButtonRow(tgbotapi.NewKeyboardButton("üìÖ –ò–∑–º–µ–Ω–∏—Ç—å –¥–∞—Ç—É –≤—ä–µ–∑–¥–∞ (in)")),
		tgbotapi.NewKeyboardButtonRow(tgbotapi.NewKeyboardButton("üìÜ –ò–∑–º–µ–Ω–∏—Ç—å –¥–∞—Ç—É –≤—ã–µ–∑–¥–∞ (out)")),
		tgbotapi.NewKeyboardButtonRow(tgbotapi.NewKeyboardButton("üåç –ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç—Ä–∞–Ω—É")),
	)
	markup.ResizeKeyboard = true
	return markup
}

// BuildResolveOptions returns keyboard for conflict resolution with a move option.
func BuildResolveOptions(move string) tgbotapi.ReplyKeyboardMarkup {
	markup := tgbotapi.NewReplyKeyboard(
		tgbotapi.NewKeyboardButtonRow(tgbotapi.NewKeyboardButton(move)),
		tgbotapi.NewKeyboardButtonRow(tgbotapi.NewKeyboardButton("‚úÖ –û—Å—Ç–∞–≤–∏—Ç—å –∫–∞–∫ –µ—Å—Ç—å")),
		tgbotapi.NewKeyboardButtonRow(tgbotapi.NewKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∏—Ç—å")),
	)
	markup.ResizeKeyboard = true
	return markup
}
